% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dfr_adwin.R
\name{dfr_adwin}
\alias{dfr_adwin}
\title{ADWIN method}
\usage{
dfr_adwin(
  target_feat,
  delta = 0.002,
  clock = 32,
  max_buckets = 5,
  min_window_length = 5,
  grace_period = 10
)
}
\arguments{
\item{target_feat}{Feature to be monitored.}

\item{delta}{The significance parameter for the ADWIN algorithm.}

\item{clock}{How often ADWIN should check for changes. 1 means every new data point, default is 32. Higher values speed up processing, but may also lead to increased delay in change detection.}

\item{max_buckets}{The maximum number of buckets of each size that ADWIN should keep before merging buckets. The idea of data buckets comes from the compression algorithm introduced in the ADWIN2, the second iteration of the ADWIN algorithm presented in the original research paper. This is the ADWIN version available in River.}

\item{min_window_length}{The minimum length allowed for a subwindow when checking for concept drift. Subwindows whose size is smaller than this value will be ignored during concept drift evaluation. Lower values may decrease delay in change detection but may also lead to more false positives.}

\item{grace_period}{ADWIN does not perform any change detection until at least this many data points have arrived.}
}
\value{
\code{dfr_adwin} object
}
\description{
Adaptive Windowing method for concept drift detection \url{doi:10.1137/1.9781611972771.42}.
}
\examples{
library(daltoolbox)
library(heimdall)

# This example assumes a model residual where 1 is an error and 0 is a correct prediction.

data(st_drift_examples)
data <- st_drift_examples$univariate
data$event <- NULL
data$prediction <- st_drift_examples$univariate$serie > 4


model <- dfr_adwin(target_feat='serie')

detection <- c()
output <- list(obj=model, pred=FALSE)
for (i in 1:length(data$serie)){
 output <- update_state(output$obj, data$serie[i])
 if (output$pred){
   type <- 'drift'
   output$obj <- reset_state(output$obj)
 }else{
   type <- ''
 }
 detection <- rbind(detection, list(idx=i, event=output$pred, type=type))
}

detection <- as.data.frame(detection)
detection[detection$type == 'drift',]
}
